function cov_2inguvl7ui(){var path="D:\\CAPGEMINI\\MEANSTACK\\CASE STUDY\\RAILWAY\\BACKEND\\booking\\bookings.js";var hash="dcb4382dec84a325de52ddb59702d58978fe9748";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\CAPGEMINI\\MEANSTACK\\CASE STUDY\\RAILWAY\\BACKEND\\booking\\bookings.js",statementMap:{"0":{start:{line:2,column:14},end:{line:2,column:32}},"1":{start:{line:3,column:10},end:{line:3,column:19}},"2":{start:{line:6,column:11},end:{line:6,column:28}},"3":{start:{line:9,column:12},end:{line:9,column:28}},"4":{start:{line:12,column:17},end:{line:12,column:39}},"5":{start:{line:13,column:0},end:{line:13,column:27}},"6":{start:{line:16,column:15},end:{line:16,column:34}},"7":{start:{line:19,column:0},end:{line:21,column:3}},"8":{start:{line:20,column:2},end:{line:20,column:58}},"9":{start:{line:24,column:11},end:{line:24,column:26}},"10":{start:{line:25,column:0},end:{line:25,column:16}},"11":{start:{line:28,column:19},end:{line:28,column:43}},"12":{start:{line:29,column:16},end:{line:29,column:45}},"13":{start:{line:31,column:21},end:{line:47,column:1}},"14":{start:{line:48,column:18},end:{line:48,column:46}},"15":{start:{line:49,column:0},end:{line:49,column:66}},"16":{start:{line:51,column:0},end:{line:51,column:21}},"17":{start:{line:52,column:14},end:{line:52,column:39}},"18":{start:{line:56,column:0},end:{line:58,column:3}},"19":{start:{line:57,column:2},end:{line:57,column:42}},"20":{start:{line:91,column:0},end:{line:99,column:3}},"21":{start:{line:92,column:2},end:{line:98,column:4}},"22":{start:{line:93,column:4},end:{line:93,column:28}},"23":{start:{line:95,column:4},end:{line:97,column:5}},"24":{start:{line:96,column:6},end:{line:96,column:16}},"25":{start:{line:123,column:0},end:{line:131,column:3}},"26":{start:{line:124,column:2},end:{line:130,column:4}},"27":{start:{line:125,column:4},end:{line:125,column:28}},"28":{start:{line:127,column:4},end:{line:129,column:5}},"29":{start:{line:128,column:6},end:{line:128,column:16}},"30":{start:{line:134,column:8},end:{line:134,column:11}},"31":{start:{line:135,column:0},end:{line:191,column:3}},"32":{start:{line:136,column:16},end:{line:136,column:36}},"33":{start:{line:138,column:17},end:{line:152,column:1}},"34":{start:{line:153,column:2},end:{line:189,column:6}},"35":{start:{line:154,column:13},end:{line:154,column:29}},"36":{start:{line:155,column:4},end:{line:155,column:20}},"37":{start:{line:156,column:4},end:{line:174,column:5}},"38":{start:{line:175,column:0},end:{line:175,column:24}},"39":{start:{line:177,column:19},end:{line:177,column:42}},"40":{start:{line:179,column:7},end:{line:186,column:9}},"41":{start:{line:180,column:22},end:{line:180,column:37}},"42":{start:{line:181,column:9},end:{line:181,column:40}},"43":{start:{line:183,column:9},end:{line:185,column:10}},"44":{start:{line:184,column:11},end:{line:184,column:21}},"45":{start:{line:187,column:7},end:{line:187,column:52}},"46":{start:{line:188,column:7},end:{line:188,column:13}},"47":{start:{line:196,column:0},end:{line:200,column:3}},"48":{start:{line:197,column:2},end:{line:199,column:4}},"49":{start:{line:198,column:4},end:{line:198,column:22}},"50":{start:{line:226,column:0},end:{line:230,column:3}},"51":{start:{line:227,column:2},end:{line:229,column:4}},"52":{start:{line:228,column:4},end:{line:228,column:22}},"53":{start:{line:235,column:0},end:{line:254,column:3}},"54":{start:{line:236,column:10},end:{line:236,column:49}},"55":{start:{line:238,column:10},end:{line:238,column:12}},"56":{start:{line:240,column:2},end:{line:253,column:4}},"57":{start:{line:241,column:4},end:{line:247,column:5}},"58":{start:{line:242,column:18},end:{line:245,column:7}},"59":{start:{line:246,column:6},end:{line:246,column:24}},"60":{start:{line:248,column:4},end:{line:248,column:18}},"61":{start:{line:250,column:4},end:{line:252,column:5}},"62":{start:{line:251,column:6},end:{line:251,column:16}},"63":{start:{line:270,column:0},end:{line:278,column:3}},"64":{start:{line:271,column:2},end:{line:277,column:4}},"65":{start:{line:272,column:4},end:{line:272,column:23}},"66":{start:{line:274,column:4},end:{line:276,column:5}},"67":{start:{line:275,column:6},end:{line:275,column:16}},"68":{start:{line:302,column:0},end:{line:306,column:2}},"69":{start:{line:303,column:2},end:{line:305,column:4}},"70":{start:{line:304,column:4},end:{line:304,column:47}},"71":{start:{line:310,column:0},end:{line:312,column:3}},"72":{start:{line:311,column:2},end:{line:311,column:65}},"73":{start:{line:314,column:0},end:{line:314,column:21}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:19,column:91},end:{line:19,column:92}},loc:{start:{line:19,column:95},end:{line:21,column:1}},line:19},"1":{name:"(anonymous_1)",decl:{start:{line:56,column:12},end:{line:56,column:13}},loc:{start:{line:56,column:23},end:{line:58,column:1}},line:56},"2":{name:"(anonymous_2)",decl:{start:{line:91,column:40},end:{line:91,column:41}},loc:{start:{line:91,column:51},end:{line:99,column:1}},line:91},"3":{name:"(anonymous_3)",decl:{start:{line:92,column:94},end:{line:92,column:95}},loc:{start:{line:92,column:106},end:{line:94,column:3}},line:92},"4":{name:"(anonymous_4)",decl:{start:{line:94,column:11},end:{line:94,column:12}},loc:{start:{line:94,column:18},end:{line:98,column:3}},line:94},"5":{name:"(anonymous_5)",decl:{start:{line:123,column:24},end:{line:123,column:25}},loc:{start:{line:123,column:35},end:{line:131,column:1}},line:123},"6":{name:"(anonymous_6)",decl:{start:{line:124,column:70},end:{line:124,column:71}},loc:{start:{line:124,column:82},end:{line:126,column:3}},line:124},"7":{name:"(anonymous_7)",decl:{start:{line:126,column:11},end:{line:126,column:12}},loc:{start:{line:126,column:18},end:{line:130,column:3}},line:126},"8":{name:"(anonymous_8)",decl:{start:{line:135,column:36},end:{line:135,column:37}},loc:{start:{line:135,column:47},end:{line:191,column:1}},line:135},"9":{name:"(anonymous_9)",decl:{start:{line:153,column:59},end:{line:153,column:60}},loc:{start:{line:153,column:71},end:{line:189,column:4}},line:153},"10":{name:"(anonymous_10)",decl:{start:{line:179,column:27},end:{line:179,column:28}},loc:{start:{line:179,column:31},end:{line:182,column:8}},line:179},"11":{name:"(anonymous_11)",decl:{start:{line:182,column:16},end:{line:182,column:17}},loc:{start:{line:182,column:23},end:{line:186,column:8}},line:182},"12":{name:"(anonymous_12)",decl:{start:{line:196,column:20},end:{line:196,column:21}},loc:{start:{line:196,column:31},end:{line:200,column:1}},line:196},"13":{name:"(anonymous_13)",decl:{start:{line:197,column:39},end:{line:197,column:40}},loc:{start:{line:197,column:50},end:{line:199,column:3}},line:197},"14":{name:"(anonymous_14)",decl:{start:{line:226,column:24},end:{line:226,column:25}},loc:{start:{line:226,column:35},end:{line:230,column:1}},line:226},"15":{name:"(anonymous_15)",decl:{start:{line:227,column:45},end:{line:227,column:46}},loc:{start:{line:227,column:56},end:{line:229,column:3}},line:227},"16":{name:"(anonymous_16)",decl:{start:{line:235,column:25},end:{line:235,column:26}},loc:{start:{line:235,column:36},end:{line:254,column:1}},line:235},"17":{name:"(anonymous_17)",decl:{start:{line:240,column:31},end:{line:240,column:32}},loc:{start:{line:240,column:43},end:{line:249,column:3}},line:240},"18":{name:"(anonymous_18)",decl:{start:{line:249,column:11},end:{line:249,column:12}},loc:{start:{line:249,column:18},end:{line:253,column:3}},line:249},"19":{name:"(anonymous_19)",decl:{start:{line:270,column:20},end:{line:270,column:21}},loc:{start:{line:270,column:31},end:{line:278,column:1}},line:270},"20":{name:"(anonymous_20)",decl:{start:{line:271,column:22},end:{line:271,column:23}},loc:{start:{line:271,column:34},end:{line:273,column:3}},line:271},"21":{name:"(anonymous_21)",decl:{start:{line:273,column:11},end:{line:273,column:12}},loc:{start:{line:273,column:18},end:{line:277,column:3}},line:273},"22":{name:"(anonymous_22)",decl:{start:{line:302,column:30},end:{line:302,column:31}},loc:{start:{line:302,column:41},end:{line:306,column:1}},line:302},"23":{name:"(anonymous_23)",decl:{start:{line:303,column:47},end:{line:303,column:48}},loc:{start:{line:303,column:59},end:{line:305,column:3}},line:303},"24":{name:"(anonymous_24)",decl:{start:{line:310,column:16},end:{line:310,column:17}},loc:{start:{line:310,column:20},end:{line:312,column:1}},line:310}},branchMap:{"0":{loc:{start:{line:95,column:4},end:{line:97,column:5}},type:"if",locations:[{start:{line:95,column:4},end:{line:97,column:5}},{start:{line:95,column:4},end:{line:97,column:5}}],line:95},"1":{loc:{start:{line:127,column:4},end:{line:129,column:5}},type:"if",locations:[{start:{line:127,column:4},end:{line:129,column:5}},{start:{line:127,column:4},end:{line:129,column:5}}],line:127},"2":{loc:{start:{line:183,column:9},end:{line:185,column:10}},type:"if",locations:[{start:{line:183,column:9},end:{line:185,column:10}},{start:{line:183,column:9},end:{line:185,column:10}}],line:183},"3":{loc:{start:{line:250,column:4},end:{line:252,column:5}},type:"if",locations:[{start:{line:250,column:4},end:{line:252,column:5}},{start:{line:250,column:4},end:{line:252,column:5}}],line:250},"4":{loc:{start:{line:274,column:4},end:{line:276,column:5}},type:"if",locations:[{start:{line:274,column:4},end:{line:276,column:5}},{start:{line:274,column:4},end:{line:276,column:5}}],line:274}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"dcb4382dec84a325de52ddb59702d58978fe9748"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2inguvl7ui=function(){return actualCoverage;};}return actualCoverage;}cov_2inguvl7ui();//load express
const express=(cov_2inguvl7ui().s[0]++,require('express'));const app=(cov_2inguvl7ui().s[1]++,express());//mailOptions
const mail=(cov_2inguvl7ui().s[2]++,require('./mail'));//communication with other services
const axios=(cov_2inguvl7ui().s[3]++,require('axios'));//middleware
const bodyParser=(cov_2inguvl7ui().s[4]++,require('body-parser'));cov_2inguvl7ui().s[5]++;app.use(bodyParser.json());//load mongoose
const mongoose=(cov_2inguvl7ui().s[6]++,require('mongoose'));//connect
cov_2inguvl7ui().s[7]++;mongoose.connect("mongodb+srv://yash123:yash123@cluster0.an7nj.mongodb.net/servicebooking",()=>{cov_2inguvl7ui().f[0]++;cov_2inguvl7ui().s[8]++;console.log("Booking Database Connected Successfully!");});//cors
const cors=(cov_2inguvl7ui().s[9]++,require('cors'));cov_2inguvl7ui().s[10]++;app.use(cors());//swagger
const swaggerJSDoc=(cov_2inguvl7ui().s[11]++,require('swagger-jsdoc'));const swaggerUI=(cov_2inguvl7ui().s[12]++,require('swagger-ui-express'));const swaggerOptions=(cov_2inguvl7ui().s[13]++,{definition:{openapi:'3.0.0',info:{title:'Booking Management API',version:'1.0.0',description:'Booking Api for Railway reservation management',contact:{name:'Yash Patil',url:'http://jakeperalta.com',email:'jakeperalta@gmail.com'},servers:["http://localhost:2222"]}},apis:["bookings.js"]});const swaggerDocs=(cov_2inguvl7ui().s[14]++,swaggerJSDoc(swaggerOptions));cov_2inguvl7ui().s[15]++;app.use('/api-docs',swaggerUI.serve,swaggerUI.setup(swaggerDocs));cov_2inguvl7ui().s[16]++;require("./Booking");const Booking=(cov_2inguvl7ui().s[17]++,mongoose.model("Booking"));cov_2inguvl7ui().s[18]++;app.get('/',(req,res)=>{cov_2inguvl7ui().f[1]++;cov_2inguvl7ui().s[19]++;res.send("This is our booking service");});//starts from asks for soure and destination and returns that particular train
//book train by entering source and destination (using train microservice here)
/**
 * @swagger
 * /booking/{source}/{destination}:
 *  get:
 *   summary: get train by train name
 *   description: get  train by train name
 *   parameters:
 *    - in: path
 *      name: source
 *      schema:
 *       type: string
 *       required: true
 *       description: source of train
 *       example: 'Mumbai'
 *    - in: path
 *      name: destination
 *      schema:
 *       type: string
 *       required: true
 *       description: destination of train
 *       example: 'Pune'
 *   responses:
 *    200:
 *     description: success
 *    500:
 *     description: failure
 */cov_2inguvl7ui().s[20]++;app.get('/booking/:source/:destination',(req,res)=>{cov_2inguvl7ui().f[2]++;cov_2inguvl7ui().s[21]++;axios.get("http://localhost:4545/train/"+req.params.source+"/"+req.params.destination).then(response=>{cov_2inguvl7ui().f[3]++;cov_2inguvl7ui().s[22]++;res.json(response.data);}).catch(err=>{cov_2inguvl7ui().f[4]++;cov_2inguvl7ui().s[23]++;if(err){cov_2inguvl7ui().b[0][0]++;cov_2inguvl7ui().s[24]++;throw err;}else{cov_2inguvl7ui().b[0][1]++;}});});/**
 * @swagger
 * /b/{trainname}:
 *  get:
 *   summary: get train by train name
 *   description: get  train by train name
 *   parameters:
 *    - in: path
 *      name: trainname
 *      schema:
 *       type: string
 *       required: true
 *       description: name of train
 *       example: 'Mumbai Express'
 *   responses:
 *    200:
 *     description: success
 *    500:
 *     description: failure
 */ //get train by trainName
cov_2inguvl7ui().s[25]++;app.get('/b/:trainname',(req,res)=>{cov_2inguvl7ui().f[5]++;cov_2inguvl7ui().s[26]++;axios.get("http://localhost:4545/train/"+req.params.trainname).then(response=>{cov_2inguvl7ui().f[6]++;cov_2inguvl7ui().s[27]++;res.json(response.data);}).catch(err=>{cov_2inguvl7ui().f[7]++;cov_2inguvl7ui().s[28]++;if(err){cov_2inguvl7ui().b[1][0]++;cov_2inguvl7ui().s[29]++;throw err;}else{cov_2inguvl7ui().b[1][1]++;}});});//booking done from here--stored in bookings database
var pnr=(cov_2inguvl7ui().s[30]++,900);cov_2inguvl7ui().s[31]++;app.post('/booking/:uid/:trainname',(req,res)=>{cov_2inguvl7ui().f[8]++;let trainname=(cov_2inguvl7ui().s[32]++,req.params.trainname);var newBooking=(cov_2inguvl7ui().s[33]++,{pnr:pnr,uid:mongoose.Types.ObjectId(req.params.uid),train:{trainNo:'',trainName:trainname,Source:'',Destination:'',deptTime:'',arriveTime:'',Fare:''}});cov_2inguvl7ui().s[34]++;axios.get("http://localhost:4545/train/"+trainname).then(response=>{cov_2inguvl7ui().f[9]++;const tr=(cov_2inguvl7ui().s[35]++,response.data[0]);cov_2inguvl7ui().s[36]++;console.log(tr);cov_2inguvl7ui().s[37]++;newBooking={pnr:pnr,uid:req.params.uid,train:{trainNo:tr.trainno,trainName:tr.trainname,Source:tr.source,Destination:tr.destination,deptTime:tr.depttime,arriveTime:tr.arrivename,Fare:tr.fare}};cov_2inguvl7ui().s[38]++;console.log(newBooking);//new booking
var booking=(cov_2inguvl7ui().s[39]++,new Booking(newBooking));cov_2inguvl7ui().s[40]++;booking.save().then(()=>{cov_2inguvl7ui().f[10]++;let emailMsg=(cov_2inguvl7ui().s[41]++,mail.sendMail());cov_2inguvl7ui().s[42]++;console.log("New Booking Done");}).catch(err=>{cov_2inguvl7ui().f[11]++;cov_2inguvl7ui().s[43]++;if(err){cov_2inguvl7ui().b[2][0]++;cov_2inguvl7ui().s[44]++;throw err;}else{cov_2inguvl7ui().b[2][1]++;}});cov_2inguvl7ui().s[45]++;res.json("A new booking done with success!");cov_2inguvl7ui().s[46]++;pnr++;});});//get booking by objectid
//for ticket summary
cov_2inguvl7ui().s[47]++;app.get('/book/:id',(req,res)=>{cov_2inguvl7ui().f[12]++;cov_2inguvl7ui().s[48]++;Booking.findById(req.params.id).then(booking=>{cov_2inguvl7ui().f[13]++;cov_2inguvl7ui().s[49]++;res.json(booking);});});/**
 * @swagger
 * /booking/{pnr}:
 *  get:
 *   summary: get booking by pnr
 *   description: get booking by pnr
 *   parameters:
 *    - in: path
 *      name: pnr
 *      schema:
 *       type: number
 *       required: true
 *       description: pnr of train
 *       example: 900
 *   responses:
 *    200:
 *     description: success
 *    500:
 *     description: failure
 */ //get booking by pnr
//check pnr status
cov_2inguvl7ui().s[50]++;app.get('/booking/:pnr',(req,res)=>{cov_2inguvl7ui().f[14]++;cov_2inguvl7ui().s[51]++;Booking.findOne({pnr:req.params.pnr}).then(booking=>{cov_2inguvl7ui().f[15]++;cov_2inguvl7ui().s[52]++;res.json(booking);});});//get all bookings done by same user
//multiple bookings
cov_2inguvl7ui().s[53]++;app.get('/bookings/:uid',(req,res)=>{cov_2inguvl7ui().f[16]++;var obj=(cov_2inguvl7ui().s[54]++,mongoose.Types.ObjectId(req.params.uid));var arr=(cov_2inguvl7ui().s[55]++,[]);cov_2inguvl7ui().s[56]++;Booking.find({uid:obj}).then(response=>{cov_2inguvl7ui().f[17]++;cov_2inguvl7ui().s[57]++;for(let i of response){let bookObj=(cov_2inguvl7ui().s[58]++,{pnr:i.pnr,train:i.train});cov_2inguvl7ui().s[59]++;arr.push(bookObj);}cov_2inguvl7ui().s[60]++;res.send(arr);}).catch(err=>{cov_2inguvl7ui().f[18]++;cov_2inguvl7ui().s[61]++;if(err){cov_2inguvl7ui().b[3][0]++;cov_2inguvl7ui().s[62]++;throw err;}else{cov_2inguvl7ui().b[3][1]++;}});});/**
 * @swagger
 * /bookings:
 *  get:
 *   summary: get all bookings
 *   description: get all bookings
 *   responses:
 *    200:
 *     description: success
 *    500:
 *     description: failure
 */ //get all bookings --useful in admins// app.get('/bookings',(req,res)=>{
cov_2inguvl7ui().s[63]++;app.get('/bookings',(req,res)=>{cov_2inguvl7ui().f[19]++;cov_2inguvl7ui().s[64]++;Booking.find().then(bookings=>{cov_2inguvl7ui().f[20]++;cov_2inguvl7ui().s[65]++;res.json(bookings);}).catch(err=>{cov_2inguvl7ui().f[21]++;cov_2inguvl7ui().s[66]++;if(err){cov_2inguvl7ui().b[4][0]++;cov_2inguvl7ui().s[67]++;throw err;}else{cov_2inguvl7ui().b[4][1]++;}});});/**
 * @swagger
 * /cancelling/{pnr}:
 *  delete:
 *   summary: delete booking
 *   description: delete booking
 *   parameters:
 *    - in: path
 *      name: pnr
 *      schema:
 *       type: number
 *       required: true
 *       description: pnr of booking
 *       example: 901
 *   responses:
 *    200:
 *     description: success
 *    500:
 *     description: failure
 */ //cancelling ticket
cov_2inguvl7ui().s[68]++;app.delete('/cancelling/:pnr',(req,res)=>{cov_2inguvl7ui().f[22]++;cov_2inguvl7ui().s[69]++;Booking.deleteOne({pnr:req.params.pnr}).then(response=>{cov_2inguvl7ui().f[23]++;cov_2inguvl7ui().s[70]++;res.json("Booking cancelled successfully!");});});cov_2inguvl7ui().s[71]++;app.listen(2222,()=>{cov_2inguvl7ui().f[24]++;cov_2inguvl7ui().s[72]++;console.log("Up and running! -- This is our Bookings Service");});cov_2inguvl7ui().s[73]++;module.exports=app;// //using axios
//
// //booking
// let id=900;
// app.post('/booking/:uname/:tname',(req,res)=>{
//   var newBooking={
//     pnr:id,
//     tname:mongoose.Types.ObjectId(req.body.tname),
//     uname:mongoose.Types.ObjectId(req.body.uname)
//   }
//   //new booking
//   var booking=new Booking(newBooking)
//
//   booking.save().then(()=>{
//     console.log("New Booking Done")
//   }).catch((err)=>{
//     if (err){
//       throw err;
//     }
//   })
//   res.send("A new booking done with success!");
//   console.log(req.body);
//   id++;
// });
// //booking done till now
//
//
// //get all bookings done till now but in form of objectid --workingg
// app.get('/bookings',(req,res)=>{
//   Booking.find().then((bookings)=>{
//     res.json(bookings);
//   }).catch((err)=>{
//     if(err){
//       throw err;
//     }
//   })
// });
//
// //check pnr status but output in form of objectid --workingg
// app.get('/bookings/:pnr',(req,res)=>{
//   Booking.find({pnr:req.params.pnr}).then((booking)=>{
//       res.json(booking);
//   }).catch((err)=>{
//     if(err){
//       throw err;
//     }
//   })
// });
//
// //get booking based on who booked the ticket and which train has been booked using object id       --workinggggggg
// app.get('/booking/:id',(req,res)=>{
//   Booking.findById(req.params.id).then((booking)=>{
//     if(booking){
//       axios.get("http://localhost:5555/user/"+booking.uname).then((response)=>{
//         var bookingObject={userName:response.data.username,trainName:'',trainno:'',source:'',destination:'',depttime:'',arrivetime:'',fare:''}
//
//         axios.get("http://localhost:4545/trains/"+booking.tname).then((response)=>{
//           bookingObject.trainName=response.data.trainname,
//           bookingObject.trainno=response.data.trainno,
//           bookingObject.source=response.data.source,
//           bookingObject.destination=response.data.destination,
//           bookingObject.depttime=response.data.depttime,
//           bookingObject.arrivetime=response.data.arrivename,
//           bookingObject.fare=response.data.fare
//
//           res.json(bookingObject)
//         })
//       })
//     }else{
//       res.send("Invalid Booking")
//     }
//   })
// });
//
// //check pnr status
// app.get('/book/:pnr',(req,res)=>{
//   Booking.findOne({pnr:req.params.pnr}).then((booking)=>{
//     // res.json(booking);
//     axios.get("http://localhost:5555/user/"+booking.uname).then((response)=>{
//       var bookingObject={userName:response.data.username,trainName:'',trainno:'',source:'',destination:'',depttime:'',arrivetime:'',fare:''}
//
//       axios.get("http://localhost:4545/trains/"+booking.tname).then((response)=>{
//         bookingObject.trainName=response.data.trainname,
//         bookingObject.trainno=response.data.trainno,
//         bookingObject.source=response.data.source,
//         bookingObject.destination=response.data.destination,
//         bookingObject.depttime=response.data.depttime,
//         bookingObject.arrivetime=response.data.arrivename,
//         bookingObject.fare=response.data.fare
//         console.log(bookingObject);
//         res.json(bookingObject)
//       })
//     })
//   })
// });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,